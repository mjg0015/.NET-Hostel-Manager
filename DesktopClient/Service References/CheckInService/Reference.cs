//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DesktopClient.CheckInService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CheckInService.ICheckInService")]
    public interface ICheckInService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/GetPendingCheckOut", ReplyAction="http://tempuri.org/ICheckInService/GetPendingCheckOutResponse")]
        DomainModel.DataContracts.CheckInDto[] GetPendingCheckOut();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/GetPendingCheckOut", ReplyAction="http://tempuri.org/ICheckInService/GetPendingCheckOutResponse")]
        System.Threading.Tasks.Task<DomainModel.DataContracts.CheckInDto[]> GetPendingCheckOutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/GetBetweenDates", ReplyAction="http://tempuri.org/ICheckInService/GetBetweenDatesResponse")]
        DomainModel.DataContracts.CheckInDto[] GetBetweenDates(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/GetBetweenDates", ReplyAction="http://tempuri.org/ICheckInService/GetBetweenDatesResponse")]
        System.Threading.Tasks.Task<DomainModel.DataContracts.CheckInDto[]> GetBetweenDatesAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/GetAll", ReplyAction="http://tempuri.org/ICheckInService/GetAllResponse")]
        DomainModel.DataContracts.CheckInDto[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/GetAll", ReplyAction="http://tempuri.org/ICheckInService/GetAllResponse")]
        System.Threading.Tasks.Task<DomainModel.DataContracts.CheckInDto[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/Create", ReplyAction="http://tempuri.org/ICheckInService/CreateResponse")]
        bool Create(DomainModel.DataContracts.CheckInDto checkInDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/Create", ReplyAction="http://tempuri.org/ICheckInService/CreateResponse")]
        System.Threading.Tasks.Task<bool> CreateAsync(DomainModel.DataContracts.CheckInDto checkInDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/DoCheckOut", ReplyAction="http://tempuri.org/ICheckInService/DoCheckOutResponse")]
        bool DoCheckOut(DomainModel.DataContracts.CheckInDto checkInDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckInService/DoCheckOut", ReplyAction="http://tempuri.org/ICheckInService/DoCheckOutResponse")]
        System.Threading.Tasks.Task<bool> DoCheckOutAsync(DomainModel.DataContracts.CheckInDto checkInDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICheckInServiceChannel : DesktopClient.CheckInService.ICheckInService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckInServiceClient : System.ServiceModel.ClientBase<DesktopClient.CheckInService.ICheckInService>, DesktopClient.CheckInService.ICheckInService {
        
        public CheckInServiceClient() {
        }
        
        public CheckInServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CheckInServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckInServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckInServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DomainModel.DataContracts.CheckInDto[] GetPendingCheckOut() {
            return base.Channel.GetPendingCheckOut();
        }
        
        public System.Threading.Tasks.Task<DomainModel.DataContracts.CheckInDto[]> GetPendingCheckOutAsync() {
            return base.Channel.GetPendingCheckOutAsync();
        }
        
        public DomainModel.DataContracts.CheckInDto[] GetBetweenDates(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetBetweenDates(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<DomainModel.DataContracts.CheckInDto[]> GetBetweenDatesAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetBetweenDatesAsync(startDate, endDate);
        }
        
        public DomainModel.DataContracts.CheckInDto[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<DomainModel.DataContracts.CheckInDto[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public bool Create(DomainModel.DataContracts.CheckInDto checkInDto) {
            return base.Channel.Create(checkInDto);
        }
        
        public System.Threading.Tasks.Task<bool> CreateAsync(DomainModel.DataContracts.CheckInDto checkInDto) {
            return base.Channel.CreateAsync(checkInDto);
        }
        
        public bool DoCheckOut(DomainModel.DataContracts.CheckInDto checkInDto) {
            return base.Channel.DoCheckOut(checkInDto);
        }
        
        public System.Threading.Tasks.Task<bool> DoCheckOutAsync(DomainModel.DataContracts.CheckInDto checkInDto) {
            return base.Channel.DoCheckOutAsync(checkInDto);
        }
    }
}
